@page "/createTicket"
@attribute [Authorize]
@using TicketManager.Shared.DtoModels;
@using TinyMCE.Blazor
@inject ITicketsService ticketsService;

<h3>Create new Ticket</h3>
<div class="">
    <div class="">
        <EditForm Model="model" OnValidSubmit="Submit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3 ml-3 mr-3 mt-3">
                <label for="@model.Title" class="form-label">Title</label>
                <InputText class="form-control" @bind-Value="model.Title" />
            </div>
            <div class="mb-3 ml-3 mr-3 mt-3">
                <label for="@model.Content" class="form-label">Content</label>
                <Editor Field="() => model.Content" Conf="@editorConf" @bind-Value="model.Content" />
            </div>
            <div class="mb-3 ml-3 mr-3 mt-3">
                <label for="@model.Audience" class="form-label">Select your audiance</label>
                <InputSelect class="form-control" @bind-Value="model.Audience">
                    <option value="Me">Me</option>
                    <option value="Everyone">Everyone</option>
                </InputSelect>
            </div>
            <div class="mb-3 ml-3 mr-3 mt-3">
                <label for="@model.ReceiverId" class="form-label">Select support</label>
                <InputSelect class="form-control" @bind-Value="model.ReceiverId">
                    <option value="4">Office support</option>
                    <option value="5">Technical support</option>
                </InputSelect>
            </div>
            <button class="btn btn-success btn-lg ml-4" type="submit">Create Ticket</button>
        </EditForm>
    </div>
</div>

@code {
    public CreateTicketModel model { get; set; } = new CreateTicketModel();
    private Dictionary<string, object> editorConf = new Dictionary<string, object>{
   { "menubar", true },
   { "plugins", "link image code" },
   { "toolbar", "undo redo | styleselect | forecolor | bold italic | alignleft aligncenter alignright alignjustify | outdent indent | link image | code" }
 };

    async Task Submit()
    {
        await ticketsService.CreateTicket(model);

        this.NavigationManager.NavigateTo("/");
    }
}